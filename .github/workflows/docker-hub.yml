---
name: Publish Container image to DockerHub

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '*.md'

permissions:
  contents: read

jobs:
  docker:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed for signing the images with GitHub OIDC Token
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Install cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Log in to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate data time for docker tag
        id: datatime
        run: echo "DATETIME=$(date +'%Y%m%d%H%M')" >> "${GITHUB_OUTPUT}"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          context: .
          push: true
          sbom: true
          platforms: linux/amd64,linux/arm64
          tags: |
            patrickfmarques/wireguard:1.0
            patrickfmarques/wireguard:1.0.0
            patrickfmarques/wireguard:1.0.0-${{ steps.datatime.outputs.DATETIME }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.docker_build.outputs.digest }}
          TAGS: patrickfmarques/wireguard
        run: cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
